-- MySQL Script generated by MySQL Workbench
-- Mon Mar  2 16:40:38 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Elective
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Elective
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Elective` DEFAULT CHARACTER SET utf8 ;
USE `Elective` ;

-- -----------------------------------------------------
-- Table `Elective`.`faculity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Elective`.`faculity` (
  `faculity_id` INT NOT NULL AUTO_INCREMENT,
  `faculity_name` VARCHAR(45) NOT NULL,
  `free_aducation_plan` INT NOT NULL DEFAULT 0,
  `paid_aducation_plan` INT NULL,
  PRIMARY KEY (`faculity_id`));

CREATE UNIQUE INDEX `faculity_id_UNIQUE` ON `Elective`.`faculity` (`faculity_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `title_UNIQUE` ON `Elective`.`faculity` (`faculity_name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Elective`.`gradereport`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Elective`.`gradereport` (
  `gradereport_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `enrollee_id` INT NOT NULL,
  `attestat` DECIMAL(2,1) NOT NULL,
  `isAccepted` TINYINT(1) NULL,
  `isFree` TINYINT(1) NULL,
  PRIMARY KEY (`gradereport_id`),
  CONSTRAINT `enrollee_id`
    FOREIGN KEY (`enrollee_id`)
    REFERENCES `Elective`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `enrollee_id_idx` ON `Elective`.`gradereport` (`enrollee_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Elective`.`gradereport2subject`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Elective`.`gradereport2subject` (
  `gradereport_id` INT NOT NULL,
  `subject_id` INT NOT NULL,
  `mark` INT NOT NULL,
  CONSTRAINT `subject_id`
    FOREIGN KEY (`subject_id`)
    REFERENCES `Elective`.`subject` (`subject_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `gradereport_id`
    FOREIGN KEY (`gradereport_id`)
    REFERENCES `Elective`.`gradereport` (`enrollee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `subject_id_idx` ON `Elective`.`gradereport2subject` (`subject_id` ASC) VISIBLE;

CREATE INDEX `gradereport_id_idx` ON `Elective`.`gradereport2subject` (`gradereport_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Elective`.`privelege`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Elective`.`privelege` (
  `privelege_id` INT NOT NULL AUTO_INCREMENT,
  `privelege` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`privelege_id`));

CREATE UNIQUE INDEX `privelege_id_UNIQUE` ON `Elective`.`privelege` (`privelege_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Elective`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Elective`.`role` (
  `role_id` INT NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`role_id`));

CREATE UNIQUE INDEX `category_id_UNIQUE` ON `Elective`.`role` (`role_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `role_UNIQUE` ON `Elective`.`role` (`role` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Elective`.`subject`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Elective`.`subject` (
  `subject_id` INT NOT NULL AUTO_INCREMENT,
  `subject_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`subject_id`));

CREATE UNIQUE INDEX `id_UNIQUE` ON `Elective`.`subject` (`subject_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `subject_name_UNIQUE` ON `Elective`.`subject` (`subject_name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Elective`.`subject2faculity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Elective`.`subject2faculity` (
  `faculity_id` INT NOT NULL,
  `subject_id` INT NOT NULL,
  `priority` INT NULL,
  CONSTRAINT `faculity_id`
    FOREIGN KEY (`faculity_id`)
    REFERENCES `Elective`.`faculity` (`faculity_name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `subject_id`
    FOREIGN KEY (`subject_id`)
    REFERENCES `Elective`.`subject` (`subject_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `faculity_id_idx` ON `Elective`.`subject2faculity` (`faculity_id` ASC) VISIBLE;

CREATE INDEX `subject_id_idx` ON `Elective`.`subject2faculity` (`subject_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Elective`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Elective`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `role` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `pasword` VARCHAR(45) NOT NULL,
  `privilege` INT NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_enrollee_role1`
    FOREIGN KEY (`role`)
    REFERENCES `Elective`.`role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `privelege`
    FOREIGN KEY (`privilege`)
    REFERENCES `Elective`.`privelege` (`privelege_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_enrollee_role1_idx` ON `Elective`.`user` (`role` ASC) VISIBLE;

CREATE UNIQUE INDEX `enrollee_id_UNIQUE` ON `Elective`.`user` (`user_id` ASC) VISIBLE;

CREATE INDEX `privelege_idx` ON `Elective`.`user` (`privilege` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Elective`.`user2faculity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Elective`.`user2faculity` (
  `user_id` INT NOT NULL,
  `faculity_id` INT NOT NULL,
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `Elective`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `faculity_id `
    FOREIGN KEY (`faculity_id`)
    REFERENCES `Elective`.`faculity` (`faculity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `user_id_idx` ON `Elective`.`user2faculity` (`user_id` ASC) VISIBLE;

CREATE INDEX `faculity_id _idx` ON `Elective`.`user2faculity` (`faculity_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `Elective`.`faculity`
-- -----------------------------------------------------
START TRANSACTION;
USE `Elective`;
INSERT INTO `Elective`.`faculity` (`faculity_id`, `faculity_name`, `free_aducation_plan`, `paid_aducation_plan`) VALUES (01, 'Math', 10, 30);
INSERT INTO `Elective`.`faculity` (`faculity_id`, `faculity_name`, `free_aducation_plan`, `paid_aducation_plan`) VALUES (02, 'Physics', 5, 15);
INSERT INTO `Elective`.`faculity` (`faculity_id`, `faculity_name`, `free_aducation_plan`, `paid_aducation_plan`) VALUES (03, 'Geographic', 3, 6);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Elective`.`gradereport`
-- -----------------------------------------------------
START TRANSACTION;
USE `Elective`;
INSERT INTO `Elective`.`gradereport` (`gradereport_id`, `enrollee_id`, `attestat`, `isAccepted`, `isFree`) VALUES (01, 01, 9, NULL, NULL);
INSERT INTO `Elective`.`gradereport` (`gradereport_id`, `enrollee_id`, `attestat`, `isAccepted`, `isFree`) VALUES (02, 02, 7,8, NULL, NULL);
INSERT INTO `Elective`.`gradereport` (`gradereport_id`, `enrollee_id`, `attestat`, `isAccepted`, `isFree`) VALUES (03, 03, 8, NULL, NULL);
INSERT INTO `Elective`.`gradereport` (`gradereport_id`, `enrollee_id`, `attestat`, `isAccepted`, `isFree`) VALUES (04, 03, 8,  , NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Elective`.`gradereport2subject`
-- -----------------------------------------------------
START TRANSACTION;
USE `Elective`;
INSERT INTO `Elective`.`gradereport2subject` (`gradereport_id`, `subject_id`, `mark`) VALUES (01, 04, 9);
INSERT INTO `Elective`.`gradereport2subject` (`gradereport_id`, `subject_id`, `mark`) VALUES (01, 05, 8);
INSERT INTO `Elective`.`gradereport2subject` (`gradereport_id`, `subject_id`, `mark`) VALUES (01, 03, 6);
INSERT INTO `Elective`.`gradereport2subject` (`gradereport_id`, `subject_id`, `mark`) VALUES (02, 01, 8);
INSERT INTO `Elective`.`gradereport2subject` (`gradereport_id`, `subject_id`, `mark`) VALUES (02, 02, 7);
INSERT INTO `Elective`.`gradereport2subject` (`gradereport_id`, `subject_id`, `mark`) VALUES (02, 03, 9);
INSERT INTO `Elective`.`gradereport2subject` (`gradereport_id`, `subject_id`, `mark`) VALUES (03, 01, 8);
INSERT INTO `Elective`.`gradereport2subject` (`gradereport_id`, `subject_id`, `mark`) VALUES (03, 03, 9);
INSERT INTO `Elective`.`gradereport2subject` (`gradereport_id`, `subject_id`, `mark`) VALUES (03, 02, 7);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Elective`.`privelege`
-- -----------------------------------------------------
START TRANSACTION;
USE `Elective`;
INSERT INTO `Elective`.`privelege` (`privelege_id`, `privelege`) VALUES (01, 'Olympiad');
INSERT INTO `Elective`.`privelege` (`privelege_id`, `privelege`) VALUES (02, 'Medal');
INSERT INTO `Elective`.`privelege` (`privelege_id`, `privelege`) VALUES (03, 'Foreign');
INSERT INTO `Elective`.`privelege` (`privelege_id`, `privelege`) VALUES (04, 'Orphan');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Elective`.`role`
-- -----------------------------------------------------
START TRANSACTION;
USE `Elective`;
INSERT INTO `Elective`.`role` (`role_id`, `role`) VALUES (01, 'Admin');
INSERT INTO `Elective`.`role` (`role_id`, `role`) VALUES (02, 'Teacher');
INSERT INTO `Elective`.`role` (`role_id`, `role`) VALUES (03, 'Enrollee');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Elective`.`subject`
-- -----------------------------------------------------
START TRANSACTION;
USE `Elective`;
INSERT INTO `Elective`.`subject` (`subject_id`, `subject_name`) VALUES (01, 'Maths');
INSERT INTO `Elective`.`subject` (`subject_id`, `subject_name`) VALUES (02, 'Physics');
INSERT INTO `Elective`.`subject` (`subject_id`, `subject_name`) VALUES (03, 'Russian');
INSERT INTO `Elective`.`subject` (`subject_id`, `subject_name`) VALUES (04, 'Geography');
INSERT INTO `Elective`.`subject` (`subject_id`, `subject_name`) VALUES (05, 'Biology');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Elective`.`subject2faculity`
-- -----------------------------------------------------
START TRANSACTION;
USE `Elective`;
INSERT INTO `Elective`.`subject2faculity` (`faculity_id`, `subject_id`, `priority`) VALUES (01, 01, 1);
INSERT INTO `Elective`.`subject2faculity` (`faculity_id`, `subject_id`, `priority`) VALUES (01, 02, 2);
INSERT INTO `Elective`.`subject2faculity` (`faculity_id`, `subject_id`, `priority`) VALUES (01, 03, 3);
INSERT INTO `Elective`.`subject2faculity` (`faculity_id`, `subject_id`, `priority`) VALUES (02, 01, 2);
INSERT INTO `Elective`.`subject2faculity` (`faculity_id`, `subject_id`, `priority`) VALUES (02, 02, 1);
INSERT INTO `Elective`.`subject2faculity` (`faculity_id`, `subject_id`, `priority`) VALUES (02, 03, 3);
INSERT INTO `Elective`.`subject2faculity` (`faculity_id`, `subject_id`, `priority`) VALUES (03, 04, 1);
INSERT INTO `Elective`.`subject2faculity` (`faculity_id`, `subject_id`, `priority`) VALUES (03, 05, 2);
INSERT INTO `Elective`.`subject2faculity` (`faculity_id`, `subject_id`, `priority`) VALUES (03, 03, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Elective`.`user`
-- -----------------------------------------------------
START TRANSACTION;
USE `Elective`;
INSERT INTO `Elective`.`user` (`user_id`, `role`, `name`, `surname`, `email`, `login`, `pasword`, `privilege`) VALUES (01, 03, 'Василий', 'Васин', 'vasya@mail.ru', 'qwerty', 'Qwerty', NULL);
INSERT INTO `Elective`.`user` (`user_id`, `role`, `name`, `surname`, `email`, `login`, `pasword`, `privilege`) VALUES (02, 03, 'Peter', 'Pettor', 'pit@gmail.com', 'asdfgh', 'Asdfgh', 03);
INSERT INTO `Elective`.`user` (`user_id`, `role`, `name`, `surname`, `email`, `login`, `pasword`, `privilege`) VALUES (03, 03, 'Ivan', 'Ivanov', 'vanya@rambler.ru', 'zxcvbn', 'Zxcvbn', 01);
INSERT INTO `Elective`.`user` (`user_id`, `role`, `name`, `surname`, `email`, `login`, `pasword`, `privilege`) VALUES (04, 01, 'Admin', 'Admin', 'admin@university.com', 'Admin', 'Admin', NULL);
INSERT INTO `Elective`.`user` (`user_id`, `role`, `name`, `surname`, `email`, `login`, `pasword`, `privilege`) VALUES (05, 02, 'Иммануил', 'Сигизмундович', 'prepod@university.com', 'Prepod', 'Prepod', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Elective`.`user2faculity`
-- -----------------------------------------------------
START TRANSACTION;
USE `Elective`;
INSERT INTO `Elective`.`user2faculity` (`user_id`, `faculity_id`) VALUES (01, 03);
INSERT INTO `Elective`.`user2faculity` (`user_id`, `faculity_id`) VALUES (02, 01);
INSERT INTO `Elective`.`user2faculity` (`user_id`, `faculity_id`) VALUES (03, 02);
INSERT INTO `Elective`.`user2faculity` (`user_id`, `faculity_id`) VALUES (03, 01);

COMMIT;

